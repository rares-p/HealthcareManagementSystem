@page "/register"
@using HealthcareManagementSystem.App.ViewModels
@using HealthcareManagementSystem.App.Auth
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider

<h3>Register</h3>


<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registerRequest">
	<DataAnnotationsValidator />

	<form class="needs-validation" novalidate>
		<div class="form-row">
			<div class="col-md-4 mb-3">
				<label for="inputFirstName" class="sr-only">FirstName</label>
				<InputText id="inputFirstName" class="form-control" @bind-Value="registerRequest.FirstName" autofocus placeholder="FirstName" />
				<ValidationMessage For="@(() => registerRequest.FirstName)" />
				<div class="valid-tooltip">
					Looks good!
				</div>
				<div class="col-md-4 mb-3">
					<label for="inputLastName" class="sr-only">LastName</label>
					<InputText id="inputLastName" class="form-control" @bind-Value="registerRequest.LastName" autofocus placeholder="LastName" />
					<ValidationMessage For="@(() => registerRequest.LastName)" />
					<div class="valid-tooltip">
						Looks good!
					</div>
				</div>
				<div class="col-md-4 mb-3">
					<label for="inputEmail" class="sr-only">Email</label>
					<InputText id="inputEmail" class="form-control" @bind-Value="registerRequest.Email" autofocus placeholder="Email" />
					<ValidationMessage For="@(() => registerRequest.Email)" />
					<div class="valid-tooltip">
						Looks good!
					</div>
				</div>
				<div class="col-md-4 mb-3">
					<label for="inputUsername" class="sr-only">Username</label>
					<InputText id="inputUsername" class="form-control" @bind-Value="registerRequest.Username" autofocus placeholder="Username" />
					<ValidationMessage For="@(() => registerRequest.Username)" />
					<div class="valid-tooltip">
						Looks good!
					</div>
				</div>
				<div class="col-md-4 mb-3">
					<label for="inputPassword" class="sr-only">Password</label>
					<InputText id="inputPassword" class="form-control" @bind-Value="registerRequest.Password" autofocus placeholder="Password" />
					<ValidationMessage For="@(() => registerRequest.Password)" />
					<div class="valid-tooltip">
						Looks good!
					</div>
				</div>
				<div class="col-md-4 mb-3">
					<label for="inputPhoneNumber" class="sr-only">PhoneNumber</label>
					<InputText id="inputPhoneNumber" class="form-control" @bind-Value="registerRequest.PhoneNumber" autofocus placeholder="PhoneNumber" />
					<ValidationMessage For="@(() => registerRequest.PhoneNumber)" />
					<div class="valid-tooltip">
						Looks good!
					</div>
				</div>
			</div>
			
		</div>
		
		<button class="btn btn-lg btn-primary btn-block" type="submit" onclick="OnClickHandler">Register</button>

		<label class="text-danger">@error</label>

	</form>
</EditForm>




@code {
	RegisterViewModel registerRequest { get; set; } = new RegisterViewModel();
	string error { get; set; }

	async Task OnSubmit()
	{
		error = null;
		try
		{
			await authStateProvider.Register(registerRequest);
@*			navigationManager.NavigateTo("/");*@
		}
		catch (Exception ex)
		{
			error = ex.Message;
		}
	}
}
